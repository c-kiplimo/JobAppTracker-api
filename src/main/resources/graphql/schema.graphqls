type Query {
    jobApplicationById(id: ID): JobApplication
    jobApplicationByCompanyName(companyName: String): [JobApplication]
    allJobApplication: [JobApplication]
    profileById(id: ID): Profile
    allProfile: [Profile]
}

type JobApplication {
    id: ID!
    companyName: String
    jobTitle: String
    salaryRange: String
    jobUrl: String
    appliedDate: String
    description: String
    status: String
}

type Profile {
    id: ID!
    firstName: String
    lastName: String
    addressStreet1: String
    addressStreet2: String
    addressCity: String
    addressState: String
    addressZip: String
    linkedin: String
    github: String
    personalWebsite: String
}

type Mutation {
    addJobApplication(addJobApplicationInput: AddJobApplicationInput): JobApplication
    updateJobApplication(jobApplication: UpdateJobApplicationInput): JobApplication
    deleteJobApplication(id: ID): JobApplication
    addProfile(addProfileInput: AddProfileInput): Profile
    updateProfile(profile: UpdateProfileInput): Profile
}

input AddJobApplicationInput {
    companyName: String
    jobTitle: String
    salaryRange: String
    jobUrl: String
    appliedDate: String
    description: String
    status: String
}

input UpdateJobApplicationInput {
    id: ID!
    companyName: String
    jobTitle: String
    salaryRange: String
    jobUrl: String
    appliedDate: String
    description: String
    status: String
}

input AddProfileInput {
    firstName: String
    lastName: String
    addressStreet1: String
    addressStreet2: String
    addressCity: String
    addressState: String
    addressZip: String
    linkedin: String
    github: String
    personalWebsite: String
}

input UpdateProfileInput {
    id: ID!
    firstName: String
    lastName: String
    addressStreet1: String
    addressStreet2: String
    addressCity: String
    addressState: String
    addressZip: String
    linkedin: String
    github: String
    personalWebsite: String
}